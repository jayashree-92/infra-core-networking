variables:
  - group: networking-backend-config

pool:
  vmImage: ubuntu-latest

trigger:
  branches:
    include:
    - main

pr: none

stages:
  - stage: terraform_ci
    displayName: Terraform CI
    jobs:
      - job: Terraform_Plan
        steps:
        - bash: |
            terraform init \
              -backend-config="storage_account_name=$TF_STATE_BLOB_ACCOUNT_NAME" \
              -backend-config="container_name=$TF_STATE_BLOB_CONTAINER_NAME" \
              -backend-config="key=$TF_STATE_BLOB_FILE" \
              -backend-config="access_key=$TF_STATE_BLOB_ACCESS_KEY"
          displayName: Terraform Init
          workingDirectory: $(System.DefaultWorkingDirectory)/main
          continueOnError: false
          env:
            TF_STATE_BLOB_ACCOUNT_NAME:   $(tf-state-blob-account)
            TF_STATE_BLOB_CONTAINER_NAME: $(tf-state-blob-container)
            TF_STATE_BLOB_FILE:           $(tf-state-blob-file)
            TF_STATE_BLOB_ACCESS_KEY:     $(tf-state-blob-access-key)

        - bash: |
            terraform validate
          displayName: Terraform Validate
          workingDirectory: $(System.DefaultWorkingDirectory)/main
          continueOnError: false

        - bash: |
            terraform plan \
              -var-file="../deployments/us1/prod.tfvars" \
              -out deployment.tfplan
          displayName: Terraform Plan
          workingDirectory: $(System.DefaultWorkingDirectory)/main
          continueOnError: false
          env:
            ARM_SUBSCRIPTION_ID: $(arm-subscription-id)
            ARM_CLIENT_ID:       $(arm-client-id)
            ARM_CLIENT_SECRET:   $(arm-client-secret)
            ARM_TENANT_ID:       $(arm-tenant-id)

        - task: CopyFiles@2
          inputs:
            SourceFolder: "./"
            Contents: |
              **/*
              !main/.terraform/**/*
            TargetFolder: $(Build.ArtifactStagingDirectory)
          displayName: "Copy Artifacts"
        - publish: $(Build.ArtifactStagingDirectory)
          artifact: drop

  - stage: terraform_cd
    displayName: Terraform CD
    jobs:
      - deployment: DeployNetworking
        displayName: Deploy Networking
        environment: 'PROD-Networking'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop

                - bash: |
                    terraform init \
                      -backend-config="storage_account_name=$TF_STATE_BLOB_ACCOUNT_NAME" \
                      -backend-config="container_name=$TF_STATE_BLOB_CONTAINER_NAME" \
                      -backend-config="key=$TF_STATE_BLOB_FILE" \
                      -backend-config="access_key=$TF_STATE_BLOB_ACCESS_KEY"
                  displayName: Terraform Init
                  workingDirectory: $(Pipeline.Workspace)/drop/main
                  continueOnError: false
                  env:
                    TF_STATE_BLOB_ACCOUNT_NAME:   $(tf-state-blob-account)
                    TF_STATE_BLOB_CONTAINER_NAME: $(tf-state-blob-container)
                    TF_STATE_BLOB_FILE:           $(tf-state-blob-file)
                    TF_STATE_BLOB_ACCESS_KEY:     $(tf-state-blob-access-key)

                - bash: |
                    terraform apply -auto-approve deployment.tfplan
                  displayName: Terraform Apply
                  workingDirectory: $(Pipeline.Workspace)/drop/main
                  env:
                    ARM_SUBSCRIPTION_ID: $(arm-subscription-id)
                    ARM_CLIENT_ID:       $(arm-client-id)
                    ARM_CLIENT_SECRET:   $(arm-client-secret)
                    ARM_TENANT_ID:       $(arm-tenant-id)
